자바스크립트

1.변수 : var / let / const
- template literal : `${변수}`

2.자료형 : 원시타입 / 참조타입
- 숫자 / 문자열 / 논리 / Symbol : "데이터 영역" 바로 값 가져올 수 있음
- 배열 / 객체 / 함수 / Map / Set : "데이터 영역"의 주소값 참조 > 객체 변수영역에서 값을 가져올 수 있음
- 변수안에 있는 값을 복제해서 사용했을 때, 사본의 데이터값이 변경 => 원본 데이터값이 같이 변경되는지에 대한 여부 체크!!!
- 배열 (*Iterable 객체)을 학습하게 되면, 참조타입 자료만의 독특한 특징 

3.형변환 : 
- typeof 변수명(*식별자)
- 문자 + 숫자 : 문자
- 문자 - 숫자 : 숫자
- toString("1" // undefined) // String() : 문자변환
- Number // parseInt // parseFloat : 숫자변환
- Boolean : 논리형값 변환

4.연산자 :
- 사칙연산 = + - / *
- % => 나머지 값을 구하는 연산자 (*짝수 && 홀수)

1) 산술연산자 : + - / * %
> %는 나머지를 구할 때에는 몫을 정수까지만 연산을 실행한 후 나머지값을 도출

2) 증감연산자 : ++ // --
> 증감연산자는 피연산자와의 입력위치에 따라서 먼저 연산을 시작할 수도 있고, 나중에 연산을 시작할 수도 있다

3) 비교연산자 : == === // != !== // < > <= >=

4) 복합대입연산자 : += // -= // *= // /= // %=

5) 논리연산자 : ! // && // ||

6) 연결연산자 : 문자열 + 문자열 

7) "삼항 = 3항"조건연산자 : 1항 => 조건식 // 2항 => 참 // 3항 => 부정
- 2015년 ES6문법 등장

<-> 제어문 (*반복문 & 조건문)

Netlify => 소스코드 (*git-hub)
> 

grid : 사전 몇 행 몇 열로 서비스를 만들것인가? 명확 & 수정 및 변경이 최소화!!!

fraction : 파편 || 조각

> justify-content : auto VS 1fr
> align-content
> justify-items : start / center / end
> align-items : start / center / end
> space-between // space-around // space-evenly
> 자식요소에서 독립적인 위치 속성 : justify-self: stretch; // align-self: stretch;

grid-template-columns : 몇 개의 열을 만들것인가?
grid-template-rows : 몇 개의 행을 만들것인가?
grid: grid-template-rows / grid-template-columns

grid-row-gap: 30px;
grid-column-gap: 30px;
grid-gap: 30px 30px;
grid-gap: 30px;
