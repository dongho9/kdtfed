1초 영상
> 29프레임
> 30개의 정지된 스틸 이미지로 완성

frame

코드 > 
깃허브 >
서버 >

메인 > A + B // C + A
=> 디자인에 정답?
=> 근거 : 제품 서비스, 누구를 대상 // 왜 만드는 것이며, 어떤 목표?

gsap, threejs, anime
> 화면에 어떤 인터랙티브하며, 크리에이티브한 요소를 창작해서 넣는작업 > 정답?

별똥별이 쏟아지는 메인페이지
- 왼쪽 /// 오른쪽
- 튕기는게

> 포트폴리오 할 때 쏟아짐

2가지
html, css ~ node
> 평등하다!!!

전환 : transition
애니메이션 : animation
변환 : transform

*animation-name : keyframes를 활용해서 정의한 애니메이션 이름을 입력

*animation-duration : 실제 실행하고자 하는 애니메이션을 얼마의 시간동안 실행

*animation-timing-function : 구현되는 애니메이션의 가속도를 어떻게 설정

*animation-iteration-count : 애니메이션의 반복횟수를 결정

*animation-direction : 애니메이션의 진행방향을 결정 (default = 일방통행 // 반대로도 실행)

*animation-play-state : 애니메이션의 실행상태를 제어할 때 사용

*animation-delay : 얼마의 시간 이후에 애니메이션을 실행시킬 것인가

tranform : 변환

html을 통해서 만든 요소(element)들의 형태 || 위치를 변환시킬 때 사용!!!

1.각도
2.크기
3.기울기
4.위치

=> x, y, "z"
=> html5

perspective = 관점 // 원근법
=> 사진 촬영 때, 
=> 2D 요소를 하나의 장면으로 담아주는 기계
=> 가까이 있는 사람 VS 멀리있는 사람 => 크게 VS 작게

=> CSS 사용자가 모니터를 바라보는 상황
=> 상대적으로 사용자에게 가깝게 느껴지도록 하는 속성
=> 위치속성 z-index : 크면클수록 
-------------------------------------------------
*perspective
=> 기본적으로 3d값을 가지고 있는 요소들의 z값의 default는 0에서 시작합니다!!!

=> perpective의 값이 클수록 해당 요소를 바라보는 간격이 커진다. 라고 이해!!! 

Figma => Variable
> 작년 6월 베타서비스
> 작년 8월 정식서비스






