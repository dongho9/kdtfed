1.문자선택자

2.부정선택자 : 개발자가 선택한 요소의 반대가되는 요소들에게만 스타일 속성을 부여할 때 사용할 수 있는 선택자!!

3.링크선택자 : a태그 안에 링크 여부에 따라서 스타일 속성을 부여해주는 선택자!!


*라이브러리 & 프레임워크 : 기존 문법을 보다 쉽고, 빠르게 사용할 수 있도록 하기 위해서 태어난 요소들!!!

> 라이브러리(*도서관) : 기존에 존재하는 언어의 문법 체계를 토대로 그 위에 본인들의 커스텀 문법을 얹힌 상태

> 프레임워크(*액자) : 완벽하게 본인들만의 문법 체계를 구축해서 본인들의 시스템을 개발자들이 별도록 학습
- Bootstrap
- Next.js
- Nest.js

> F/E : 
- jQuery
- React.js
- Next.js
> 본인들만의 고유한 문법 체계

> 주석 // 

> 라이브러리 사용 비중 최소

현재 작업중인 미니프로젝트 관련 질문
- 기술적인 부분 : WBS
> 본질 

- 방향성 부분
> 수업 시간

1) 목표설정

2) 문제점도출 // 문제인식

3) 타겟유저 // 사용자

4) 페르소나

5) 사전리서치

6) 저니맵

7) 오버뷰 (*제품)

8) 스타일 & 컴포넌트 가이드 (*메인 // 서브 // 버튼)

9) UI 구현
- 인덱스
- 상세페이지
- 로그인 & 회원가입
- 이벤트페이지

*태그
- h / p / a / img / video / audio / table / li / form

*선택자
- 전체선택자
- 태그선택자
- id선택자
- class선택자
- 속성선택자
- 후손/자손 선택자
- 동위선택자
- 반응선택자
- 상태선택자
- 일반구조/형태구조 선택자 
- 문자선택자
- 링크선택자
- 부정선택자

*Semantic

*공간분할태그

- CSS 단위
> px : 고정 단위
- 다양해진 device
- 애초에 독립적인 device UI 구현 목적
- 16px

> em : element = 요소
- 부모요소를 기준으로 배수 계산

> rem : root element = 최고 뿌리 요소
- body요소에 폰트사이즈 값을 적용하고 모든 요소들은 body를 기준으로 배수 계산 

> % : width || height 정의하고자 할 때
- 가변그리드 : 부모요소의 전체 너비가 변경될 때 해당 값에 비례해서 margin 혹은 padding의 간격도 변경되게 하고자 할 때 적용할 수 있는 단위

- 만약, 부모 혹은 자식 요소 중에 height의 값이 적용된 적이 없다면, 그때는 height : 100%는 그냥 자식요소의 기본 높이값만큼을 의미한다

- 만약, 자식 요소 중에 height값을 인위적으로 적용하게 된다면, height : 100%는 자식요소의 높이값을 적용한 높이값만큼으로 변경된다

- 부모 요소의 높이값이 구체적으로 정해진 상황에서는 height의 값을 가변적으로 변경했을 때 적용!!!

> vw : viewport width => 사용자의 눈에 보여지는 공간에서의 총 너비 면적

> vh : viewport height => 사용자의 눈에 보여지는 공간에서의 총 높이 면적

> max-width // max-height

> min-width // min-height
- 부모요소의 너비값이 줄어들 때 같이 비례해서 줄어들더라도 최소한의 너비값 이상으로 줄어들게 되면 그때에는 더이상 같이 줄어들게 하지않고 min-width값을 적용시키겠다는 의미!!!

- CSS 속성

> 단위속성

> 색상

> 가시속성
- display : 

block :
- 특정 요소가 보여질 수 있도록 하는 속성
- none이라는 속성의 반대의 의미를 가지고 있는 속성

inline : 
- 특정 요소가 보여질 수 있도록 하는 속성

inline-block :
- 특정 요소가 보여질 수 있도록 하는 속성
- 만약 inline-block 속성안에 담겨있는 요소들이 하나의 행을 벗어나는 경우에는 block처럼 독립적으로 사용!!!
- 만약 inline-block 속성안에 담겨있는 요소들이 하나이 행 안에서 소화될 수 있는 겨웅에는 inline처럼 같이 한 행을 공유해서 사용!!!

> inline VS inline-block
1) 너비, 높이 값을 적용받을 수 있는가
2) 마진, 패딩 값을 어디까지 적용받을 수 있는가

none : 특정 요소를 보이지 않도록 && 공간을 없애는 속성

- visibility : 공간을 유지한 상태로 보이지 않게 하는 속성

> 박스속성
- margin : 특정 요소 바깥 공간(*여백)을 얼만큼 부여할 것 인가에 대한 스타일 속성

- padding : 특정 요소 내부 공간(*여백)을 얼만큼 부여할 것 인가에 대한 스타일 속성

- box-sizing

> 테두리 = border 속성

> 배경속성 => background

> 폰트속성 => 
font-size
font-family
font-style
font-weight
line-height

- Responsive 개념
> Flex
> Grid

- CSS 애니메이션
> transition
> transform
> animation

- SCSS 이론 & 실습

statcounter

*가산혼합 : 색을 더하면 더할 수록 하얀색에 수렴
*웹화면 출력 : RGB 기법
-> Red Green Blue => 색의 3원색

#ff 00 00

#00ff00

#0000ff

#f0a23c

2의4제곱 2의 4제곱 => 2의 8제곱 => 256
> 바이너리 코드 : 0, 1 => bit
> 8개의 bit => 1byte = 2의 8제곱
> 웹 색조합 => 1byte

#ff ff ff => 하얀색

> 255

#f00
#fff
rgb(255, 255, 255)
rgba(255, 0, 0, 0.5)

16진수 가장 큰 숫자 : f
0 ~ 9 a ~ f




=> Hex코드
=> 6각형 => Hexagon

쌤!!! 너비, 높이 x









